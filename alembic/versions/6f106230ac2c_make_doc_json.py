"""make_doc_json

Revision ID: 6f106230ac2c
Revises: 7e6714770a31
Create Date: 2025-09-25 01:40:08.282399

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6f106230ac2c'
down_revision: Union[str, None] = '7e6714770a31'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Use raw SQL to handle the conversion properly
    op.execute("""
        ALTER TABLE documents 
        ALTER COLUMN content TYPE JSON 
        USING CASE 
            WHEN content IS NULL THEN NULL
            ELSE ('{"text": "' || content || '"}')::json
        END
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First alter the column type back to VARCHAR
    op.alter_column('documents', 'content',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    
    # Then convert JSON content back to string format
    op.execute("""
        UPDATE documents 
        SET content = CASE 
            WHEN content IS NULL THEN NULL
            ELSE content::text
        END
    """)
    # ### end Alembic commands ###
